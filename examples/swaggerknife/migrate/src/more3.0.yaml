# from: https://swagger.io/docs/specification/basic-structure/

openapi: 3.0.0
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server

components:
  schemas:
    User:
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
  securitySchemas:
    BasicAuth:
      type: http
      scheme: basic

security:
  - BasicAuth: []

parameters:
  userId:
    in: path
    name: userId
    requred: true
    description: The ID of the user to return
    schema:
      type: integer
      format: int64
      minimum: 1

paths:
  /users:
    get:
      summary: Returns a list of users.
      description: Optional extended description in Markdown.
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      summary: Craetes a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      resonses:
        "201":
          description: Created
  /users/{userId}:
    get:
      summary: Returns a user by ID.
      parameters:
        - name: userId
          in: path
          requred: true
          description: The ID of the user to return
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: A user object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 4
                  name:
                    type: string
                    example: Jessica Smith
        "400":
          description: The specified user ID is invalid (not a number)
        "404":
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error
  /users2/{userId}:
    get:
      summary: Returns a user by ID.
      parameters:
        - $ref: "#/parameters/userId"
      responses:
        "200":
          description: A user object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: The specified user ID is invalid (not a number)
        "404":
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error
  /users2:
    post:
      summary: Craetes a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      resonses:
        "201":
          description: Created
