info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
security:
- BasicAuth: []
openapi: 3.0.0
servers:
- url: http://api.example.com/v1
  description: ''
components:
  securitySchemes:
    BasicAuth:
      type: basic
  schemas:
    User:
      properties:
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
  parameters:
    userId:
      in: path
      name: userId
      required: true
      description: The ID of the user to return
      schema:
        type: integer
        format: int64
        minimum: 1
  requestBodies:
    postUserBody:
      description: |
        The json body when creating user
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
paths:
  /users:
    get:
      summary: Returns a list of users.
      description: Optional extended description in Markdown.
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      summary: Craetes a user.
      responses:
        '201':
          description: Created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
  /users/{userId}:
    get:
      summary: Returns a user by ID.
      parameters:
      - in: path
        name: userId
        required: true
        description: The ID of the user to return
        schema:
          type: integer
          format: int64
          minimum: 1
      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 4
                  name:
                    type: string
                    example: Jessica Smith
        '400':
          description: The specified user ID is invalid (not a number)
        '404':
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error
  /users2:
    post:
      summary: Craetes a user.
      responses:
        '201':
          description: Created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
  /users2/{userId}:
    get:
      summary: Returns a user by ID.
      parameters:
      - $ref: "#/components/parameters/userId"
      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: The specified user ID is invalid (not a number)
        '404':
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error
  /users3:
    post:
      summary: Craetes a user.
      responses:
        '201':
          description: Created
      requestBody:
        $ref: "#/components/requestBodies/postUserBody"
